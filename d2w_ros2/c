import rclpy
from rclpy.node import Node
from std_msgs.msg import Float64MultiArray

class Ref_pub(node):
    def __init__(self):
        super().__init__('ref_pub')
        self.pub = self.create_publisher(Float64MultiArray, '/ref', 10)
        timer_period = 0.1
        self.timer = self.create_timer(timer_period, self.timer_callback)

    def timer_callback(self):
        msg = Float64MultiArray()
        arr = input()
        l = list(map(float, arr.split(' ')))

        if len(l) > 3:
            msg.data = l[0:3]
            self.pub.publisher(msg)
        else:
            self.get_logger().info('Error!)
def main(args=None):
    rclpy.init(args=args)
    reference_publisher = Ref_pub()
    rclpy.spin(reference_publisher)
    reference_publisher.destroy_node()
    rclpy.shutdown()

if __name__ == '__main__':
    main()
